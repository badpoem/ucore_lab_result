(THU.CST) os is loading ...

Special kernel symbols:
  entry  0xc010002a (phys)
  etext  0xc010bdf9 (phys)
  edata  0xc019bf2a (phys)
  end    0xc019f0b8 (phys)
Kernel executable memory footprint: 637KB
ebp is 0xc0129f38, eip is 0xc0100adf, argu[0] is 000010094, argu[1] is 000000000, argu[2] is 0c0129f68, argu[3] is 0c01000d3, 
    kern/debug/kdebug.c:351: print_stackframe+21
ebp is 0xc0129f48, eip is 0xc0100dd7, argu[0] is 000000000, argu[1] is 000000000, argu[2] is 000000000, argu[3] is 0c0129fb8, 
    kern/debug/kmonitor.c:129: mon_backtrace+10
ebp is 0xc0129f68, eip is 0xc01000d3, argu[0] is 000000000, argu[1] is 0c0129f90, argu[2] is 0ffff0000, argu[3] is 0c0129f94, 
    kern/init/init.c:58: grade_backtrace2+33
ebp is 0xc0129f88, eip is 0xc01000fc, argu[0] is 000000000, argu[1] is 0ffff0000, argu[2] is 0c0129fb4, argu[3] is 00000002a, 
    kern/init/init.c:63: grade_backtrace1+38
ebp is 0xc0129fa8, eip is 0xc010011a, argu[0] is 000000000, argu[1] is 0c010002a, argu[2] is 0ffff0000, argu[3] is 00000001d, 
    kern/init/init.c:68: grade_backtrace0+23
ebp is 0xc0129fc8, eip is 0xc010013f, argu[0] is 0c010be1c, argu[1] is 0c010be00, argu[2] is 00000318e, argu[3] is 000000000, 
    kern/init/init.c:73: grade_backtrace+34
ebp is 0xc0129ff8, eip is 0xc010007f, argu[0] is 000000000, argu[1] is 000000000, argu[2] is 00000ffff, argu[3] is 040cf9a00, 
    kern/init/init.c:33: kern_init+84
memory management: default_pmm_manager
e820map:
  memory: 0009fc00, [00000000, 0009fbff], type = 1.
  memory: 00000400, [0009fc00, 0009ffff], type = 2.
  memory: 00010000, [000f0000, 000fffff], type = 2.
  memory: 07efe000, [00100000, 07ffdfff], type = 1.
  memory: 00002000, [07ffe000, 07ffffff], type = 2.
  memory: 00040000, [fffc0000, ffffffff], type = 2.
check_alloc_page() succeeded!
check_pgdir() succeeded!
check_boot_pgdir() succeeded!
-------------------- BEGIN --------------------
PDE(0e0) c0000000-f8000000 38000000 urw
  |-- PTE(38000) c0000000-f8000000 38000000 -rw
PDE(001) fac00000-fb000000 00400000 -rw
  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
--------------------- END ---------------------
use SLOB allocator
check_slab() success
kmalloc_init() succeeded!
check_vma_struct() succeeded!
page fault at 0x00000100: K/W [no page found].
check_pgfault() succeeded!
check_vmm() succeeded.
ide 0:      10000(sectors), 'QEMU HARDDISK'.
ide 1:     262144(sectors), 'QEMU HARDDISK'.
SWAP: manager = fifo swap manager
BEGIN check_swap: count 31866, total 31866
setup Page Table for vaddr 0X1000, so alloc a page
setup Page Table vaddr 0~4MB OVER!
set up init env for check_swap begin!
page fault at 0x00001000: K/W [no page found].
page fault at 0x00002000: K/W [no page found].
page fault at 0x00003000: K/W [no page found].
page fault at 0x00004000: K/W [no page found].
set up init env for check_swap over!
write Virt Page c in fifo_check_swap
write Virt Page a in fifo_check_swap
write Virt Page d in fifo_check_swap
write Virt Page b in fifo_check_swap
write Virt Page e in fifo_check_swap
page fault at 0x00005000: K/W [no page found].
swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
write Virt Page b in fifo_check_swap
write Virt Page a in fifo_check_swap
page fault at 0x00001000: K/W [no page found].
swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
write Virt Page b in fifo_check_swap
page fault at 0x00002000: K/W [no page found].
swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
write Virt Page c in fifo_check_swap
page fault at 0x00003000: K/W [no page found].
swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
write Virt Page d in fifo_check_swap
page fault at 0x00004000: K/W [no page found].
swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
count is 5, total is 5
check_swap() succeeded!
++ setup timer interrupts
kernel_execve: pid = 2, name = "hello".
Hello world!!.
I am process 2.
hello pass.
all user-mode processes have quit.
init check memory pass.
kernel panic at kern/process/proc.c:467:
    initproc exit.

Welcome to the kernel debug monitor!!
Type 'help' for a list of commands.
K> 